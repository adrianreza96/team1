@model FeastFreedom.Models.User

@{
    ViewBag.Title = "Create";
}

<meta name="viewport" content="width-device-width" />
<title>New Account</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.bootstrapvalidator/0.5.0/css/bootstrapValidator.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js" type="text/javascript"></script>

<div class="container">

    <form class="form-horizontal" action=" " method="post">
        @Html.AntiForgeryToken()
        <fieldset>

            <!-- Form Name -->
            <center><h2><b>Creat New Account</b></h2></center><br>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeHolder = "First Name" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeHolder = "Last Name" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeHolder = "joe@example.com" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeHolder = "password" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeHolder = "confirm password" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-book"></i></span>
                        @Html.EditorFor(model => model.BillingAddress, new { htmlAttributes = new { @class = "form-control", placeHolder = "23 example street" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.SecurityQuestionOne, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign"></i></span>
                        @Html.EditorFor(model => model.SecurityQuestionOne, new { htmlAttributes = new { @class = "form-control", placeHolder = "2/28/2000" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
            </div>

            <!-- Text input-->

            <div class="form-group">
                @Html.LabelFor(model => model.SecurityQuestionTwo, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign"></i></span>
                        @Html.EditorFor(model => model.SecurityQuestionTwo, new { htmlAttributes = new { @class = "form-control", placeHolder = "New York City" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.SecurityQuestionTwo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 selectContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control selectpicker" })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>

            <!-- Button -->

            <div class="form-group">
                <div class="row">
                    <div class="col-6">
                        <input type="submit" value="Create" class="btn btn-dark" style="float:right" />
                    </div>
                    <div class="col-6">
                        @Html.ActionLink("Cancel", "Login", "Users", new { @class = "btn btn-dark" })
                    </div>
                </div>
            </div>

        </fieldset>
    </form>
</div>
</div><!-- /.container -->

<img src="~/Images/carrot.jpg" alt="Avatar" style="border-radius: 52%; width:7px; height:7px; position:relative; bottom:200px; left:55px; opacity:0.5">
<img src="~/Images/carrot.jpg" alt="Avatar" style="border-radius: 52%; width:10px; height:10px; position:relative; bottom:180px; left:53px; opacity:0.6">
<img src="~/Images/carrot.jpg" alt="Avatar" style="border-radius: 52%; width:20px; height:20px; position:relative; bottom:150px; left:47px; opacity:0.7">
<img src="~/Images/carrot.jpg" alt="Avatar" style="border-radius: 52%; width:30px; height:30px; position:relative; bottom:110px; left:10px; opacity:0.8">

<script>
    $(document).ready(function () {

        var css = 'nav li a:hover{ background-color: transparent !important}';
        var style = document.createElement('style');

        if (style.styleSheet) {
            style.styleSheet.cssText = css;
        } else {
            style.appendChild(document.createTextNode(css));
        }

        document.getElementsByTagName('nav')[0].appendChild(style);

        var css1 = 'nav li a:focus{ background-color: transparent !important}';
        var style1 = document.createElement('style');

        if (style1.styleSheet) {
            style1.styleSheet.cssText = css1;
        } else {
            style1.appendChild(document.createTextNode(css1));
        }

        document.getElementsByTagName('nav')[0].appendChild(style);

        let element = document.getElementsByTagName("div")[2];
        element.classList.remove("body-content");

        $('#contact_form').bootstrapValidator({
            // To use feedback icons, ensure that you use Bootstrap v3.1.0 or later
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            }
        })
    });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js" type="text/javascript"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js" type="text/javascript"></script>

